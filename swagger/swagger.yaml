tags:
  - name: User
    description: 사용자 관련 API
  - name: Fragrance
    definitions: 향수 관련 API
  - name: Search
    definitions: 검색 관련 API
  - name: Review
    definitions: 리뷰 관련 API
schemes:
  - "https"
  - "http"
#유저 API
/user/signup:
  post:
    description: 회원가입
    tags: [User]
    produces:
      - "application/json"
    parameters:
      - name: "body"
        in: "body"
        description: "회원 가입에 필요한 email, password, phone, gender, age가 담긴 body"
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
              example: apitest@gmail.com
            password:
              type: string
              example: qwerasdf
            phone:
              type: string
              example: 01012345678
            gender:
              type: string
              example: female
            age:
              type: integer
              example: 25
    responses:
      "200":
        description: "회원가입에 성공하였습니다"

/user/addNick:
  post:
    description: 닉네임 등록
    tags: [User]
    produces:
      - "application/json"
    parameters:
      - name: "body"
        in: "body"
        description: "회원가입 후 닉네임 등록"
        required: true
        schema:
          type: object
          properties:
            email:
              type: string
              example: test@gmail.com
            nick:
              type: string
              example: test_nick1
    responses:
      "200":
        description: "닉네임 등록에 성공했습니다."
      "400":
        description: "닉네임 등록에 실패했습니다."
/user/signin:
  post:
    description: 로그인
    tags: [User]
    consumes:
      - application/json
    parameters:
      - in: body
        name: user
        description: Email, 비밀번호로 로그인
        schema:
          type: object
          properties:
            email:
              type: string
              example: test@gmail.com
            password:
              type: string
              example: qwerasdf
    responses:
      "200":
        description: "로그인에 성공했습니다."
      "400":
        description: "비밀번호가 올바르지 않습니다."

/user/checkEmail:
  post:
    description: 이메일 중복 확인
    tags: [User]
    consumes:
      - application/json
    parameters:
      - in: body
        name: email
        description: 이메일 중복 확인
        schema:
          type: object
          properties:
            email:
              type: string
              example: test@gmail.com
    responses:
      "200":
        description: "사용 가능한 이메일입니다."
      "400":
        description: "이미 사용중인 이메일입니다."

/user/checkNick:
  post:
    description: 닉네임 중복 확인
    tags: [User]
    consumes:
      - application/json
    parameters:
      - in: body
        name: nick
        description: 닉네임 중복 확인
        schema:
          type: object
          properties:
            nick:
              type: string
              example: test
    responses:
      "200":
        description: "사용 가능한 닉네임입니다."
      "400":
        description: "이미 사용중인 닉네임입니다."
/user/verifyPhone:
  post:
    description: 휴대폰 인증
    tags: [User]
    consumes:
      - application/json
    parameters:
      - in: body
        name: phone
        description: 휴대폰 인증
        schema:
          type: object
          properties:
            phone:
              type: string
              example: "+8210"
    responses:
      "200":
        description: "인증번호가 전송되었습니다."
      "400":
        description: "서버 내부 오류입니다."
/auth/request:
  get:
    description: AccessToken 재발급
    tags: [User]
    consumes:
      - application/json
    parameters:
      - name: "RefreshToken"
        in: "header"
        description: "리프레시 토큰"
        required: true
        type: "string"
    responses:
      "200":
        description: "액세스토큰을 재발급합니다."
      "400":
        description: "토큰 발급에 문제가 발생했습니다."

#향수 API
/fragrance/all:
  get:
    description: 모든 향수 불러오기
    tags: [Fragrance]
    consumes:
      - application/json
    responses:
      "200":
        description: "향수 정보를 가져옵니다."
      "400":
        description: "향수를 가져오는데 문제가 생겼습니다."
/fragrance/{brand}/{fragrance}:
  get:
    description: 원하는 향수 불러오기
    tags: [Fragrance]
    consumes:
      - application/json
    parameters:
      - name: "brand"
        in: "path"
        description: "브랜드 이름(한글)"
        required: true
        type: "string"
      - name: "fragrance"
        in: "path"
        description: "향수 이름(한글)"
        required: true
        type: "string"
    responses:
      "200":
        description: "원하는 향수 정보를 가져옵니다."

      "400":
        description: "향수를 가져오는데 문제가 생겼습니다."
/search:
  get:
    description: 브랜드 및 향수 검색
    tags: [Search]
    consumes:
      - application/json
    parameters:
      - name: "searchText"
        in: "query"
        description: "검색어"
        required: true
        type: "string"
      - name: "order"
        in: "query"
        description: "순서"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
            - "likes"
            - "countingReview"
            - "avgStars"
          default: "likes"
      - name: "limit"
        in: "query"
        description: "개수(안쓰면 전체 불러오기)"
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "몇번째부터 불러올지(안쓰면 0번째부터)"
        required: false
        type: "integer"
      - name: "category"
        in: "query"
        description: "1 = 니치향수 , 0 = 모든 향수"
        required: true
        type: "integer"
    responses:
      "200":
        description: "검색 결과가 나옵니다."

      "400":
        description: "검색 시 문제가 발생하였습니다."

#리뷰 관련 API
/review/addReview:
  post:
    description: "향수 리뷰 등록"
    tags: [Review]
    consumes:
      - application/json
    parameters:
      - in: body
        name: nick
        description: "리뷰 등록"
        schema:
          type: object
          properties:
            nick:
              type: string
              example: 1
            brand:
              type: string
              example: "diptyque"
            en_name:
              type: string
              example: "l'eau de néroli eau de toilette"
            kr_brand:
              type: string
              example: "딥티크"
            kr_name:
              type: string
              example: "로 드 네롤리"
            mood:
              type: string
              example: "따뜻한"
            category:
              type: integer
              example: 1
            stars:
              type: integer
              example: 5
            longevity:
              type: integer
              example: 3
            comment:
              type: string
              example: "향수 좋아요!"
        responses:
          "200":
            description: "리뷰가 등록되었습니다."
          "400":
            description: "리뷰 문제가 발생하였습니다."
/review/{nick}:
  get:
    description: "내가 쓴 리뷰 불러오기"
    tags: [Review]
    consumes:
      - application/json
    parameters:
      - name: "nick"
        in: "path"
        description: "닉네임"
        required: true
        type: "string"
        example: "capstone"
    responses:
      "200":
        description: "리뷰를 불러옵니다."
      "500":
        description: "검색 시 문제가 발생하였습니다."

/review/{brand}/{fragrance}:
  get:
    description: "해당 향수 리뷰 불러오기"
    tags: [Review]
    consumes:
      - application/json
    parameters:
      - name: "brand"
        in: "path"
        description: "브랜드 이름(한글)"
        required: true
        type: "string"
      - name: "fragrance"
        in: "path"
        description: "향수 이름(한글)"
        required: true
        type: "string"
    responses:
      "200":
        description: "해당 향수 리뷰를 가져옵니다."
      "500":
        description: "리뷰를 가져오는데 문제가 생겼습니다."

/review/update/{id}:
  patch:
    description: "해당 향수 리뷰 수정하기"
    tags: [Review]
    consumes:
      - application/json
    parameters:
      - name: "id"
        in: "path"
        description: "idx"
        required: true
        type: "string"
      - in: body
        name: body
        description: "리뷰 수정"
        schema:
          type: object
          properties:
            mood:
              type: string
              example: "따뜻한"
            stars:
              type: integer
              example: 5
            longevity:
              type: integer
              example: 3
            comment:
              type: string
              example: "향수 좋아요!"
    responses:
      "200":
        description: "해당 향수 리뷰를 가져옵니다."
      "500":
        description: "리뷰를 가져오는데 문제가 생겼습니다."
definitions:
  User:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
      nick:
        type: "string"
      phone:
        type: "string"
      gender:
        type: "string"
      age:
        type: "integer"
  Fragrance:
    type: "object"
    properties:
      brand:
        type: "string"
      kr_brand:
        type: "string"
      en_name:
        type: "string"
      kr_name:
        type: "string"
      img:
        type: "string"
      likes:
        type: "integer"
      avgStars:
        type: "decimal"
      countingReview:
        type: "integer"
  Review:
    type: "object"
    properties:
      brand:
        type: "string"
      kr_brand:
        type: "string"
      en_name:
        type: "string"
      kr_name:
        type: "string"
      stars:
        type: "integer"
      longevity:
        type: "integer"
      mood:
        type: "string"
      comment:
        type: "string"
